{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","post.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","checkForm","path","validateInput","unique","pw","pwConfirm","submitBtn","disabled","Array","from","inputs","every","input","value","match","getAttribute","Set","map","size","form","querySelector","style","outline","document","getElementsByClassName","onkeyup","onclick","playSplashPageAnimation","index","words","el","classList","remove","add","setTimeout","lastChild","addEventListener","handleEvent","contains","removeEventListener","propertyName","socket","io","window","onload","location","pathname","emit","room","toLowerCase","slice","reset","selectOption","userInput","queryURL","encodedURL","encodeURI","fetchHeaders","method","headers","accept","fetch","then","res","json","totalItems","textContent","items","volumeInfo","title","href","canonicalVolumeLink","authorsLength","authors","authorsArray","join","description","search","replace"],"mappings":"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","file":"post.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// socket io -- the cdnjs script is in the HTML template above this script file\nconst host = 'timolawl-bookclub.herokuapp.com';\nvar socket = io();\n/*\nif (host == location.host) {\n  socket = io.connect('https://timolawl-voting.herokuapp.com:5000');\n}\nelse socket = io.connect('//localhost:5000');\n*/\n\nfunction checkForm (path) {\n    // on form change or on group of input change, test\n    const form = document.querySelector('form');\n    // need live nodelist since add/deleting:\n    const inputs = document.getElementsByClassName('form__input');\n    const submitBtn = document.querySelector('input[type=\"submit\"]');\n    submitBtn.disabled = true;\n    //const inherentBtnColor = submitBtn.style.background;\n    //submitBtn.style.background = 'gray';\n    // better way would be to fade it out with a blend? overlay?\n\n    function validateInput () {\n        let unique, pw, pwConfirm;\n\n        submitBtn.disabled = true;\n\n        if (Array.from(inputs).every(input => input.value.match(input.getAttribute('pattern')))) {\n            if (path === 'createpoll' && inputs.length >= 3) {\n                unique = new Set(Array.from(inputs).map(input => input.value));\n                if (inputs.length === unique.size)\n                    submitBtn.disabled = false;\n            }\n            else if (path !== 'createpoll') {\n                if (path === 'signup') {\n                    pw = form.querySelector('.form__input--password');\n                    pwConfirm = form.querySelector('.form__input--confirm');\n                    if (pw.value === pwConfirm.value) {\n                        pw.style.outline = 'initial';\n                        pwConfirm.style.outline = 'initial';\n                        submitBtn.disabled = false;\n                    }\n                    else {\n                        pw.style.outline = '1px solid red';\n                        pwConfirm.style.outline = '1px solid red';\n                    }\n                }\n                else submitBtn.disabled = false;\n            }\n        }\n    }\n    form.onkeyup = validateInput;\n    form.onclick = validateInput;\n}\n\nwindow.onload = function () {\n  // socket io logic:\n  if (location.pathname.match(/^\\/$/)) // if home path\n    socket.emit('change room', { room: location.pathname }); // '/'\n\n  if (location.pathname.match(/^\\/(?:signup|login|reset|createpoll|mybooks)\\/?/i))\n    socket.emit('leave room', { path: location.pathname.toLowerCase().slice(1) });\n\n/****************/    \n\n  if (location.pathname.match(/^\\/$/)) {\n    setTimeout(() => { playSplashPageAnimation(0) }, 1500); // start from the first index of 0.\n  }\n\n  if (location.pathname.match(/^\\/(?:signup|login)\\/?/i)) {\n    // clear out form\n    document.querySelector('form').reset();\n    // gray out submit button until everything is filled in.\n    checkForm(location.pathname.toLowerCase().slice(1));\n  }\n\n  if (location.pathname.match(/^\\/mybookshelf$/)) {\n    document.querySelector('.search__bar__submit').addEventListener('click', e => {\n      // check the select option first\n      let selectOption = document.querySelector('.search__bar__option').value;\n      let userInput = document.querySelector('.search__bar__input--mybookshelf').value;\n      \n      if (selectOption === 'add') {\n        // search using google API\n        // sanitize input, then ajax -> to populate the preview section?\n        let queryURL = 'https://www.googleapis.com/books/v1/volumes?q=' + userInput;\n        let encodedURL = encodeURI(queryURL);\n        let fetchHeaders = { method: 'GET', headers: { accept: 'application/json' } };\n        fetch(encodedURL, fetchHeaders)\n          .then(res => res.json())\n          // if no items in response, then display message that no book was found with criteria\n          \n          .then(json => {\n            if (json.totalItems) { // if there are items.\n              document.querySelector('.preview__link').textContent = json.items[0].volumeInfo.title;\n              document.querySelector('.preview__link').href = json.items[0].volumeInfo.canonicalVolumeLink;\n              let authorsLength = json.items[0].volumeInfo.authors.length;\n              let authorsArray = json.items[0].volumeInfo.authors;\n              if (authorsLength > 2) {\n                let lastAuthor = \n                authorsArray[authorsArray.length - 1] = 'and ' +\n                  authorsArray[authorsArray.length - 1];\n                document.querySelector('.preview__author').textContent = authorsArray.join(', ');;\n              }\n              else if (authorsLength > 1) {\n                document.querySelector('.preview__author').textContent = authorsArray.join(' and ');\n              }\n              else document.querySelector('.preview__author').textContent = authorsArray[0];\n              document.querySelector('.preview__excerpt').textContent = json.items[0].volumeInfo.description;\n              //return fetch(json.items[0].selfLink, fetchHeaders)\n              //  .then(res => res.json())\n              //  .then(json => console.log(json));\n            }\n          })\n          .then(() => {\n            document.querySelector('.wrapper--preview').classList.remove('is-not-displayed');\n            // set up the add button for this book:\n            document.querySelector('.preview__submit').addEventListener('click', e => {\n              // socket the info to the server - put all data in an object above and send the object\n             // socket.emit('add to bookshelf', \n            });\n          });\n          \n      }\n      else if (selectOption === 'find') {\n        // search current bookshelf/bookshelves for the book in question via permalink?\n        // to use good search, can go through google api again, but that requires keeping the\n        // google generated book id (permalink?)\n        // otherwise, the search has to be perfect by title or author\n        // (isn't this always the case though?)\n        // should this search go through the db for integrity? going through\n        // client side only doesn't really work for large libraries.\n        // is this where socket is used?\n\n        // replace all instances of the dollar sign to prevent NoSQL injection attack\n        socket.emit('search bookshelf', { search: userInput.replace(/\\$/g, '') });\n      }\n\n    });\n  }\n\n};\n\nfunction playSplashPageAnimation (index) {\n  let words = ['ideas', 'adventure', 'inspiration', 'books', 'swap'];\n\n  // on transition end, start new transition. no need to add delay\n  let el = document.querySelector('.transition--' + words[index]);\n  el.classList.remove('is-invisible');\n  el.classList.remove('move-down-fade-in'); // the transition\n\n  if (!index) { // first element -- ideas\n    el.classList.add('move-down-fade-out');\n    playSplashPageAnimation(index + 1); // start immediately to align w/ other transitions\n  }\n\n  if (index === words.length - 1) { // last element -- swap\n    el.classList.add('translate--post');\n    document.querySelector('.banner__title--pre').classList.add('translate--pre');\n    setTimeout(() => { document.querySelector('.transition--books').lastChild.classList.add('is-invisible') }, 10); // timeout solution for the problem of the invisible 'Book' being removed after 'Books' invisibility is processed...\n  }\n\n  el.addEventListener('transitionend', function handleEvent(e) {\n    if (el.classList.contains('move-down-fade-out')) {\n      playSplashPageAnimation(index + 1);\n      el.removeEventListener('transitionend', handleEvent);\n    }\n\n    // check if it's the right transition that finished\n    else if (e.propertyName === 'opacity') {\n      if (index < words.length - 2) {\n        el.classList.add('move-down-fade-out');\n      }\n      else if (words[index] === 'books') { // basically if it gets here, it's 1 before the last\n        playSplashPageAnimation(index + 1);\n        el.removeEventListener('transitionend', handleEvent);\n      }\n    }\n  });\n}\n\n"]}